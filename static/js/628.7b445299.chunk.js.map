{"version":3,"file":"static/js/628.7b445299.chunk.js","mappings":"kTAAaA,EAAU,mCCGvBC,EAAAA,EAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCP,IADnC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFf,cACjBG,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFZ,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAU,mCAAG,WAAMC,GAAN,uFACDX,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBY,IAFnB,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,kHC3BVQ,EAAOC,EAAAA,GAAAA,GAAH,6CAIJC,EAAaD,EAAAA,GAAAA,GAAH,6CAIVE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAIRI,EAAaJ,EAAAA,GAAAA,EAAH,+H,SCKvB,EAfmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,SAACC,EAAD,CAAUQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAApD,UACE,SAACF,EAAD,UAAaK,EAAMK,WAFNL,EAAME,GADR,KAStB,C,yIChBYI,EAAOf,EAAAA,GAAAA,KAAH,oLAUJgB,EAAQhB,EAAAA,GAAAA,MAAH,mGAOLiB,EAASjB,EAAAA,GAAAA,OAAH,sY,SCUnB,MAzBA,YAA6C,IAA3BkB,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAC1B,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOrB,EAAP,KAAcuB,EAAd,KAWA,OACE,UAACN,EAAD,CAAMG,SAVa,SAAAI,GACnBA,EAAEC,iBACFL,EAASpB,EACV,EAOC,WACE,SAACkB,EAAD,CAAOQ,KAAK,OAAOC,KAAK,QAAQC,MAAO5B,EAAO6B,SAN7B,SAAAL,GACnBD,EAASC,EAAEM,OAAOF,MACnB,KAKG,SAACT,EAAD,CAAQO,KAAK,SAAb,sBAGL,E,UCOD,EAvBe,WACb,OAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAewB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAAY,GAajD,OARAC,EAAAA,EAAAA,YAAU,WACHF,IAILpC,EAAAA,EAAAA,IAAWoC,GAAaG,KAAKP,EAC9B,GAAE,CAACI,KAGF,4BACE,SAAC,EAAD,CAAQf,SAbK,SAAApB,GACfkC,EAAgB,CAAElC,MAAAA,GACnB,EAW+BqB,aAAcc,KAC1C,SAACI,EAAA,EAAD,CAAYhC,OAAQA,MAGzB,C","sources":["Constants/api.js","Constants/theMoviedApi.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/Search.styled.js","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const API_KEY = '66e075889f1772e4fd209caf9a73f027';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../Constants/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  overflow: hidden;\n`;\n\nexport const LinkFilm = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  text-align: center;\n  color: black;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { LinkFilm, MoviesItem, List, MovieTitle } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <MoviesItem key={movie.id}>\n          <LinkFilm to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieTitle>{movie.title}</MovieTitle>\n          </LinkFilm>\n        </MoviesItem>\n      ))}\n    </List>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  height: 30px;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 16px;\n  outline: none;\n  border: none;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  background-color: #005fff69;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 16px;\n  border: none;\n  height: 100%;\n  color: #fff;\n  font-weight: 500;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #005fffc7;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from './Search.styled';\n\nfunction Search({ onSubmit, initialValue }) {\n  const [query, setQuery] = useState(initialValue);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n}\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialValue: PropTypes.string,\n};\n\nexport default Search;\n","import { useSearchParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuery } from '../../Constants/theMoviedApi';\nimport Search from 'components/Search/Search';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') || '';\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <Search onSubmit={onSubmit} initialValue={searchQuery} />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchDetails","movieId","fetchCast","cast","fetchReviews","fetchQuery","query","List","styled","MoviesItem","LinkFilm","Link","MovieTitle","movies","location","useLocation","map","movie","to","id","state","from","title","Form","Input","Button","onSubmit","initialValue","useState","setQuery","e","preventDefault","type","name","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","then","MoviesList"],"sourceRoot":""}