{"version":3,"file":"static/js/927.912ce60d.chunk.js","mappings":"kTAAaA,EAAU,mCCGvBC,EAAAA,EAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCP,IADnC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFf,cACjBG,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFZ,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAU,mCAAG,WAAMC,GAAN,uFACDX,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBY,IAFnB,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,2IC3BVQ,EAAaC,EAAAA,GAAAA,GAAH,iEAKVC,EAAaD,EAAAA,GAAAA,GAAH,2CAIVE,EAAeF,EAAAA,GAAAA,EAAH,mEAKZG,EAAaH,EAAAA,GAAAA,EAAH,sC,SCmBvB,EAzBgB,WACd,IAAQP,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAaH,GAASgB,KAAKF,EAC5B,GAAE,CAACd,KAGF,8BACGa,EAAQI,QACP,SAACX,EAAD,UACGO,EAAQK,KAAI,SAAAC,GAAM,OACjB,UAACX,EAAD,YACE,UAACC,EAAD,WAAeU,EAAOC,OAAtB,QACA,UAACV,EAAD,WAAaS,EAAOE,QAApB,SAFeF,EAAOG,GADP,OAQrB,sEAIP,C","sources":["Constants/api.js","Constants/theMoviedApi.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Revievs.jsx"],"sourcesContent":["export const API_KEY = '66e075889f1772e4fd209caf9a73f027';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../Constants/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin: 20px 0;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-weight: bold;\n  margin: 0 0 10px;\n`;\n\nexport const ReviewText = styled.p`\n  margin: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../Constants/theMoviedApi';\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ReviewList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <ReviewAuthor>{review.author}:</ReviewAuthor>\n              <ReviewText>{review.content}:</ReviewText>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchDetails","movieId","fetchCast","cast","fetchReviews","fetchQuery","query","ReviewList","styled","ReviewItem","ReviewAuthor","ReviewText","useParams","useState","reviews","setReviews","useEffect","then","length","map","review","author","content","id"],"sourceRoot":""}