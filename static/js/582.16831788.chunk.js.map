{"version":3,"file":"static/js/582.16831788.chunk.js","mappings":"kTAAaA,EAAU,mCCGvBC,EAAAA,EAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCP,IADnC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFf,cACjBG,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFZ,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAU,mCAAG,WAAMC,GAAN,uFACDX,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBY,IAFnB,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,6NC1BVQ,EAAOC,EAAAA,GAAAA,IAAH,0CAIJC,EAAQD,EAAAA,GAAAA,GAAH,yCAILE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,EAAaH,EAAAA,GAAAA,GAAH,6CAIVI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kDAIRM,EAAaN,EAAAA,GAAAA,EAAH,8H,mJCrBVO,EAAOP,EAAAA,GAAAA,KAAH,oLAUJQ,EAAQR,EAAAA,GAAAA,MAAH,mGAOLS,EAAST,EAAAA,GAAAA,OAAH,sY,SCUnB,I,EAAA,EAzBA,YAA6C,IAA3BU,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAC1B,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOb,EAAP,KAAce,EAAd,KAWA,OACE,UAACN,EAAD,CAAMG,SAVa,SAAAI,GACnBA,EAAEC,iBACFL,EAASZ,EACV,EAOC,WACE,SAACU,EAAD,CAAOQ,KAAK,OAAOC,KAAK,QAAQC,MAAOpB,EAAOqB,SAN7B,SAAAL,GACnBD,EAASC,EAAEM,OAAOF,MACnB,KAKG,SAACT,EAAD,CAAQO,KAAK,SAAb,sBAGL,ECrBYd,EAAaF,EAAAA,GAAAA,GAAH,oM,UCuCvB,EAjCe,WACb,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAAY,GAC3CC,GAAWC,EAAAA,EAAAA,MAajB,OARAC,EAAAA,EAAAA,YAAU,WACHJ,IAIL7B,EAAAA,EAAAA,IAAW6B,GAAaK,KAAKT,EAC9B,GAAE,CAACI,KAGF,4BACE,SAAC,EAAD,CAAQhB,SAbK,SAAAZ,GACf2B,EAAgB,CAAE3B,MAAAA,GACnB,EAW+Ba,aAAce,KAE1C,SAACxB,EAAD,UACGmB,EAAOW,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAUC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAA5C,UACE,SAAC,KAAD,UAAaK,EAAMK,WAFNL,EAAME,GADR,QAUxB,C","sources":["Constants/api.js","Constants/theMoviedApi.jsx","pages/Home/Home.styled.js","components/Search/Search.styled.js","components/Search/Search.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["export const API_KEY = '66e075889f1772e4fd209caf9a73f027';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../Constants/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: white;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  overflow: hidden;\n`;\n\nexport const LinkFilm = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  text-align: center;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  height: 30px;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 16px;\n  outline: none;\n  border: none;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  background-color: #005fff69;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 16px;\n  border: none;\n  height: 100%;\n  color: #fff;\n  font-weight: 500;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #005fffc7;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from './Search.styled';\n\nfunction Search({ onSubmit, initialValue }) {\n  const [query, setQuery] = useState(initialValue);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n}\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialValue: PropTypes.string,\n};\n\nexport default Search;\n","import styled from 'styled-components';\nexport const MoviesList = styled.ul`\n  display: block;\n\n  max-width: 100%;\n  margin: 10px auto 0px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  list-style: none;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuery } from '../../Constants/theMoviedApi';\nimport Search from 'components/Search/Search';\nimport { MoviesList } from './Movies.styled';\nimport { LinkFilm, MoviesItem, MovieTitle } from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <Search onSubmit={onSubmit} initialValue={searchQuery} />\n\n      <MoviesList>\n        {movies.map(movie => (\n          <MoviesItem key={movie.id}>\n            <LinkFilm to={`${movie.id}`} state={{ from: location }}>\n              <MovieTitle>{movie.title}</MovieTitle>\n            </LinkFilm>\n          </MoviesItem>\n        ))}\n      </MoviesList>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchDetails","movieId","fetchCast","cast","fetchReviews","fetchQuery","query","Main","styled","Title","MoviesList","MoviesItem","LinkFilm","Link","MovieTitle","Form","Input","Button","onSubmit","initialValue","useState","setQuery","e","preventDefault","type","name","value","onChange","target","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","then","map","movie","to","id","state","from","title"],"sourceRoot":""}