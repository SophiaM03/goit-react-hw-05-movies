{"version":3,"file":"static/js/544.4147e247.chunk.js","mappings":"kTAAaA,EAAU,mCCGvBC,EAAAA,EAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCP,IADnC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFf,cACjBG,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,IAFZ,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAU,mCAAG,WAAMC,GAAN,uFACDX,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBY,IAFnB,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,6FCSvB,UAzBa,WACX,IAAMQ,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,MAAgBiB,KAAKF,EACtB,GAAE,KAGD,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,+BACA,SAAC,KAAD,UACGD,EAAOI,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAUC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMZ,GAAnD,UACE,SAAC,KAAD,UAAaQ,EAAMK,WAFNL,EAAME,GADR,UAW1B,C,6NClCYI,EAAOC,EAAAA,GAAAA,IAAH,0CAIJC,EAAQD,EAAAA,GAAAA,GAAH,yCAILE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,EAAaH,EAAAA,GAAAA,GAAH,6CAIVI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kDAIRM,EAAaN,EAAAA,GAAAA,EAAH,8H","sources":["Constants/api.js","Constants/theMoviedApi.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js"],"sourcesContent":["export const API_KEY = '66e075889f1772e4fd209caf9a73f027';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../Constants/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrending } from '../../Constants/theMoviedApi';\nimport {\n  LinkFilm,\n  Main,\n  MoviesItem,\n  MoviesList,\n  MovieTitle,\n  Title,\n} from './Home.styled';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <Main>\n        <Title>Trending movies</Title>\n        <MoviesList>\n          {movies.map(movie => (\n            <MoviesItem key={movie.id}>\n              <LinkFilm to={`movies/${movie.id}`} state={{ from: location }}>\n                <MovieTitle>{movie.title}</MovieTitle>\n              </LinkFilm>\n            </MoviesItem>\n          ))}\n        </MoviesList>\n      </Main>\n    </>\n  );\n};\nexport default Home;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: white;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  overflow: hidden;\n`;\n\nexport const LinkFilm = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  text-align: center;\n  color: black;\n`;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchDetails","movieId","fetchCast","cast","fetchReviews","fetchQuery","query","location","useLocation","useState","movies","setMovies","useEffect","then","map","movie","to","id","state","from","title","Main","styled","Title","MoviesList","MoviesItem","LinkFilm","Link","MovieTitle"],"sourceRoot":""}